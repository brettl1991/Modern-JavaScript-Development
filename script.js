//Module: reusable piece of code, that encapsulates implementation details. Usually a stand alone file.
//Containsc code but also can have imports and exports.
//Export: we can export values out of a module.And whatever we export it is called public API.
//Import: we can import values from other modules, and these other modules from which we import called dependencies of the importing module, because the code is in the module that is importing can not work without the code that is importing from the external module.
//Benefits of using modules: 1. Compose software:modules are small building blocks that we put together to build complex applications. 2.Isolate components: modules can be developed in isolation without thinking about the entire codebase. 3. Abstract code: implement low-level code in modules and import these abstractions into other modules. 4. Leads to more organised code. 5. Reuse code: allow us to reuse same code across multiple projects.

//JavaScript has a nativ built in ES6 modules system.
//Modules are stored in files, 1 module per files. Top-level Variables private to a modules by default. Only way that an outside module can have access to a value which is inside of a module is by exporting that value. In scripts they are global. Modules are executen always in strict mode while scripts in "sloppy" mode. In modules this keyword always undefined at the top level, while in scripts it points at the window object.In modules we can export and import just on the top level while in scripts it is impossible. All imports are hoisted. In modules HTML linking: <script type="module">. File downloading in modules happens in an async way, while in scripts files downloaded in a blocking sync way unless we using async or defer atrubutes on the script tag. Modules are imported synchronously thanks to top-levelimports, which make imprts known before execution. This makes bundling and dead code elimination possible. Import is just a reference of an exported value, so not copied. So when the value changes in the exporting module, than the same value also changes in the importing module.
